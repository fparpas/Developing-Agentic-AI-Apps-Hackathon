# Use the official .NET 9.0 runtime image
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base
WORKDIR /app
EXPOSE 8080

# Use the official .NET 9.0 SDK image to build the app
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src
COPY ["MCP.Server.Remote.Weather.Solution.csproj", "./"]
RUN dotnet restore "MCP.Server.Remote.Weather.Solution.csproj"
COPY . .
RUN dotnet build "MCP.Server.Remote.Weather.Solution.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "MCP.Server.Remote.Weather.Solution.csproj" -c Release -o /app/publish /p:UseAppHost=false

# Final stage - optimized for Azure Functions
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .

# Azure Functions specific environment variables
ENV AzureWebJobsScriptRoot=/app \
    AzureFunctionsJobHost__Logging__Console__IsEnabled=true \
    ASPNETCORE_URLS=http://+:8080

# Create a non-root user (optional for Azure Functions but good practice)
RUN adduser --disabled-password --gecos '' appuser && chown -R appuser /app
USER appuser

# Start the application
ENTRYPOINT ["dotnet", "MCP.Server.Remote.Weather.Solution.dll"]
